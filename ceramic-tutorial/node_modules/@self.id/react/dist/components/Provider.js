import { Provider as StateProvider } from 'jotai';
import React from 'react';
import { Hydrate, QueryClient, QueryClientProvider } from 'react-query';
import { ReactClient } from '../client.js';
import { DEFAULT_CLIENT_CONFIG, clientAtom, requestViewerIDAtom, stateScope } from '../state.js';
/** @internal */ const DEFAULT_QUERY_OPTIONS = {
    staleTime: Infinity,
    refetchOnWindowFocus: false
};
/** Top-level provider component for using Self.ID's React APIs. */ export function Provider(props) {
    const { children , client , queryOptions , state , threeidConnect  } = props;
    const reactClient = client instanceof ReactClient ? client : new ReactClient(Object.assign(client ?? DEFAULT_CLIENT_CONFIG, {
        threeidConnect
    }));
    const queryClient = new QueryClient({
        defaultOptions: {
            queries: queryOptions ? {
                ...DEFAULT_QUERY_OPTIONS,
                ...queryOptions
            } : DEFAULT_QUERY_OPTIONS
        }
    });
    return /*#__PURE__*/ React.createElement(StateProvider, {
        initialValues: [
            [
                clientAtom,
                reactClient
            ],
            [
                requestViewerIDAtom,
                state?.viewerID ?? null
            ], 
        ],
        scope: stateScope
    }, /*#__PURE__*/ React.createElement(QueryClientProvider, {
        client: queryClient
    }, /*#__PURE__*/ React.createElement(Hydrate, {
        state: state?.hydrate
    }, children)));
}
