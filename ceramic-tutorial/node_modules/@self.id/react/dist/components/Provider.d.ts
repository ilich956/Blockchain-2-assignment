import type { ModelTypeAliases } from '@glazed/types';
import type { CoreModelTypes } from '@self.id/core';
import type { WebClientParams } from '@self.id/web';
import type { ReactNode } from 'react';
import { type QueryObserverOptions } from 'react-query';
import { ReactClient } from '../client.js';
import type { RequestState } from '../types.js';
export declare type ProviderProps<ModelTypes extends ModelTypeAliases = CoreModelTypes> = {
    children: ReactNode;
    /**
     * An instance of {@linkcode ReactClient} or
     * {@linkcode web.WebClientParams client configuration parameters}.
     */
    client?: ReactClient<ModelTypes> | WebClientParams<ModelTypes>;
    /**
     * Custom options for the internal
     * {@link https://react-query.tanstack.com/ react-query} configuration.
     */
    queryOptions?: QueryObserverOptions;
    /** {@linkcode RequestState} emitted by a {@linkcode RequestClient} instance. */
    state?: RequestState;
    /** Enable 3id-connect support, defaults to false  */
    threeidConnect?: boolean;
};
/** Top-level provider component for using Self.ID's React APIs. */
export declare function Provider<ModelTypes extends ModelTypeAliases = CoreModelTypes>(props: ProviderProps<ModelTypes>): JSX.Element;
